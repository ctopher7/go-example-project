version: "3.7"

services:
  grpc_server:
    build:
      dockerfile: ./dockerfile/grpc_server.Dockerfile
    container_name: grpc_server
    restart: unless-stopped
    networks:
      - backbone
    ports:
      - 9000:9000
    volumes:
      - ./subsetdata:/subsetdata
  consumer:
    build:
      dockerfile: ./dockerfile/consumer.Dockerfile
    container_name: consumer
    restart: unless-stopped
    networks:
      - backbone
    volumes:
      - ./subsetdata:/subsetdata
  redis:
    build:
      dockerfile: ./dockerfile/redis.Dockerfile
    container_name: redis
    restart: unless-stopped
    networks: 
      - "backbone"
    ports:
      - 6379:6379
    volumes:
      - ./temp/redis-data:/data
      - type: bind
        source: ./config/redis.conf
        target: /usr/local/etc/redis/redis.conf
  redpanda-0:
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # enable logs for debugging.
      - --default-log-level=debug
      - --set redpanda.kafka_batch_max_bytes=20971520
      - --set redpanda.kafka_request_max_bytes=20971520
    image: docker.redpanda.com/vectorized/redpanda:v22.3.11
    container_name: redpanda-0
    volumes:
      - redpanda-0:/var/lib/redpanda/data
    networks:
      - backbone
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/vectorized/console:v2.2.0
    networks:
      - backbone
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment: 
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

networks:
  backbone:
    name: backbone
    driver: bridge

volumes:
  redpanda-0: null