// Code generated by mockery v2.21.1. DO NOT EDIT.

package fs

import (
	model "github.com/ctopher7/gltc/v2/part1/model"
	mock "github.com/stretchr/testify/mock"
)

// MockDatalogic is an autogenerated mock type for the Datalogic type
type MockDatalogic struct {
	mock.Mock
}

// GetAllNDJsonFileInDir provides a mock function with given fields: directoryPath
func (_m *MockDatalogic) GetAllNDJsonFileInDir(directoryPath string) ([]model.Stock, error) {
	ret := _m.Called(directoryPath)

	var r0 []model.Stock
	var r1 error
	if rf, ok := ret.Get(0).(func(string) ([]model.Stock, error)); ok {
		return rf(directoryPath)
	}
	if rf, ok := ret.Get(0).(func(string) []model.Stock); ok {
		r0 = rf(directoryPath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]model.Stock)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(directoryPath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockDatalogic interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockDatalogic creates a new instance of MockDatalogic. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockDatalogic(t mockConstructorTestingTNewMockDatalogic) *MockDatalogic {
	mock := &MockDatalogic{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
