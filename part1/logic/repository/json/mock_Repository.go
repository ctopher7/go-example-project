// Code generated by mockery v2.21.1. DO NOT EDIT.

package json

import (
	encodingjson "encoding/json"

	mock "github.com/stretchr/testify/mock"
)

// MockRepository is an autogenerated mock type for the Repository type
type MockRepository struct {
	mock.Mock
}

// Decode provides a mock function with given fields: decoder, v
func (_m *MockRepository) Decode(decoder *encodingjson.Decoder, v interface{}) error {
	ret := _m.Called(decoder, v)

	var r0 error
	if rf, ok := ret.Get(0).(func(*encodingjson.Decoder, interface{}) error); ok {
		r0 = rf(decoder, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockRepository creates a new instance of MockRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockRepository(t mockConstructorTestingTNewMockRepository) *MockRepository {
	mock := &MockRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
